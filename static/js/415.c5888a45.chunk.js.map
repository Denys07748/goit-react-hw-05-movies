{"version":3,"file":"static/js/415.c5888a45.chunk.js","mappings":"wNAGaA,EAAYC,EAAAA,EAAAA,GAAH,oJAQTC,EAAeD,EAAAA,EAAAA,GAAH,4JAaZE,EAAYF,EAAAA,EAAAA,GAAH,iG,SCItB,EAxBoB,SAAC,GAA0B,IAAzBG,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WACpBC,GAAWC,EAAAA,EAAAA,MAGjB,OACI,SAACP,EAAD,UACKI,EAAOI,KAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACfC,EAAI,UAAMP,EAAa,UAAY,IAA/B,OAAoCI,GAC9C,OACI,SAACP,EAAD,WACI,UAAC,KAAD,CAAMW,GAAID,EAAME,MAAO,CAACC,KAAMT,GAA9B,WACI,gBAAKU,IAAKL,EAAa,0CACkBA,GACnC,sCACFM,IAAKP,KACT,SAACP,EAAD,UAAYO,QANDD,EASrB,KAIjB,C,0HCSD,UA9Ba,WACT,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACNC,GACH,GAAE,IAEH,IAAMA,EAAS,mCAAG,6GAEeC,EAAAA,KAFf,UAGwB,KAD5BC,EAFI,QAGKC,QAAQC,OAHb,yCAICC,EAAAA,GAAAA,MAAY,6EAJb,OAOVT,EAAUM,EAAWC,SAPX,gDASVL,EAAS,EAAD,IATE,yDAAH,qDAaf,OACI,6BACI,4CACA,SAAC,IAAD,CAAYjB,OAAQA,EAAQC,YAAY,IACvCe,GAASQ,EAAAA,GAAAA,MAAY,mFAGjC,C,2KC/BKC,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFZ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qDAQjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC2BM,IAFpB,cACxBH,EADwB,yBAKvBA,EAASC,MALc,2CAAH,sDAQhBG,EAAY,mCAAG,WAAM5B,GAAN,uFACHuB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpB,EAA9B,oBAA4CqB,IADzC,cACpBG,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZI,EAAe,mCAAG,WAAO7B,EAAI8B,GAAX,uFACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,YACK8B,EADL,oBACuBT,IAFjB,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,uD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/ApiService.js"],"sourcesContent":["import styled from '@emotion/styled'; \n\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  padding: 10px 0;\n  list-style: none;\n`;\n\nexport const MovieWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n\n  & img {\n    width: 197px;\n  }\n`;\n\nexport const MovieName = styled.h5`\n  padding: 4px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: black;\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, MovieWrapper, MovieName } from './MoviesList.styled';\n\nconst MoviestList = ({movies, isFromHome}) => {\n    const location = useLocation();\n\n\n    return (\n        <Container>\n            {movies.map(({id, title, backdrop_path}) => {\n                const path = `${isFromHome ? 'movies/' : ''}${id}`;\n                return (\n                    <MovieWrapper key={id}>\n                        <Link to={path} state={{from: location}}>\n                            <img src={backdrop_path \n                                ? `https://image.tmdb.org/t/p/w200/${backdrop_path}`\n                                : \"https://via.placeholder.com/200x120\"} \n                                alt={title} />\n                            <MovieName>{title}</MovieName>\n                        </Link>\n                    </MovieWrapper>\n                )}\n            )}\n        </Container>\n    )\n}\n\nexport default MoviestList;\n\nMoviestList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),),\n    isFromHome: PropTypes.bool,\n}\n","import { toast } from 'react-toastify';\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport * as API from 'services/ApiService';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        getMovies();\n    }, []);\n\n    const getMovies = async () => {\n        try {\n            const moviesData = await API.getTrendingMovies();\n             if(moviesData.results.length === 0) {\n                return toast.error('Sorry, there are no images matching your search query. Please try again.');\n                }\n       \n            setMovies(moviesData.results);\n        } catch (error) {\n            setError(error);\n        }   \n    };\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            <MoviesList movies={movies} isFromHome={true} />\n            {error && toast.error(\"Oops, an error occurred while loading the page. Please try reloading the page\")}\n        </main>\n    )\n}   \n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f2fae09050301062329c7f99a1fba61d';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieSubInfo = async (id, option) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${option}?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["Container","styled","MovieWrapper","MovieName","movies","isFromHome","location","useLocation","map","id","title","backdrop_path","path","to","state","from","src","alt","useState","setMovies","error","setError","useEffect","getMovies","API","moviesData","results","length","toast","BASE_URL","KEY","getTrendingMovies","axios","response","data","getMoviesByQuery","query","getMovieById","getMovieSubInfo","option"],"sourceRoot":""}